@using WebTourTravel.Help
@model WebTourTravel.Models.ModelInfoBooking
@{
    ViewBag.Title = "BookingTour";
    string userName = ViewBag.UserName != null ? ViewBag.UserName.ToString() : "";
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>@ViewBag.Title</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Favicon -->
    <link href="img/favicon.ico" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600;700&family=Montserrat:wght@400;500;600;700&display=swap" rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Customized Bootstrap Stylesheet -->
    <link href="~/Content/booking/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="~/Content/booking/style.css" rel="stylesheet">
    <style>
        .tour-info {
            font-size: 14px;
        }

        .user-info_button {
            width: 100%;
            height: 100%;
            padding: 12px 0;
            border: none;
            border-radius: 5px;
            margin-bottom: 10px;
            display: inline-block;
            background-color: #31b0d5;
            color: white;
            text-align: center;
            text-decoration: none;
            transition: all ease 0.2s;
        }

            .user-info_button:hover {
                color: white;
                text-decoration: none;
                background-color: #337ab7;
            }

        .info-row {
            display: flex;
            align-items: center;
        }

        .info-label {
            font-size: 14px;
            color: black;
            font-weight: bold;
        }

        * + .row {
            margin: 20px 0;
        }

        .text-secondary {
            color: black;
        }
    </style>
</head>

<body>
    <!-- Booking End -->
    <!-- Booking Start -->
    <div class="container-xxl py-5">
        <div class="container">
            <div class="text-center wow fadeInUp" data-wow-delay="0.1s">
                <h6 class="section-title text-center text-primary text-uppercase">Booking SJourney</h6>
                <h1 class="mb-5">Book A <span class="text-primary text-uppercase">Travel Journey</span></h1>
            </div>
            <div>
                <div style="display:flex; margin: 50px 0;">
                    <div style="flex: 1;border-radius: 10px 0 0 10px;overflow: hidden;">
                        <img class="avata" src="~/images/images_tour/@Html.DisplayFor(model => model.tour.Avata)" alt="anhChuyenDi" style="width: 100%;height: 100%;object-fit: cover;object-position: center;">
                    </div>
                    <div style="flex: 2; padding: 15px 30px; background-color: #f9f9f9;">
                        <h3 class="tentour" style="color: #2d4271;font-size: 22px;font-weight: 700;line-height: 28px;text-align: left;">@Html.DisplayFor(model => model.tour.TenTour)</h3>
                        <div style="text-align: left; padding-top:15px;">
                            <p class="tour-info">Mã Tour <b class="idtour">@Html.DisplayFor(model => model.tour.id_tour)</b></p>
                            <p class="tour-info">Khởi hành <b class="khoihanh">@Html.DisplayFor(model => model.tour.KhoiHanh)</b></p>
                            <p class="tour-info">Thời gian <b class="thoigian">@Html.DisplayFor(model => model.tour.ThoiGian)</b></p>
                            <p class="tour-info">Nơi khởi hành <b class="noikhoihanh">@Html.DisplayFor(model => model.tour.NoiKhoiHanh)</b></p>
                            <p class="tour-info">Số chỗ còn nhận <b class="soluonggtoida">@Html.DisplayFor(model => model.soLuongCon)</b></p>
                        </div>
                    </div>
                </div>
                @{
                    // Khai báo biến để lưu số lượng người lớn và trẻ em
                    int soLuongNguoiLon = 1;
                    int soLuongTreEm = 0;
                }

                <form style="margin-top: 25px;">
                    <div class="row">
                        <div style="width:50% ; display: flex;justify-content: center; flex-direction:column; align-items: center;">
                            <h3>Thông tin liên lạc</h3>
                            <div class="row g-3">
                                <div class="col-6">
                                    <div class="form-floating">
                                        <input required type="text" class="form-control txt-fullname" id="Name" name="Name" placeholder="Your Name">
                                        <label for="Name">Họ và tên</label>
                                    </div>
                                </div>
                                @{
                                    var nguoiDung = HelpCustommners.GetNguoiDungByEmail(User.Identity.Name);
                                }
                                <div class="col-6">
                                    <div class="form-floating">
                                        <input readonly required name="Email" type="email" class="form-control txt-email" id="Email" placeholder="Your Email" value="@nguoiDung.Gmail">
                                        <label for="email">Email</label>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-floating">
                                        <select name="PhuongThucThanhToan" class="form-select" id="select3">
                                            <option id="checked_atm" value="1">Thanh toán bằng thẻ nội địa ATM</option>
                                            <option id="checked_zalopay" value="2">Thanh toán bằng Zalo Pay</option>
                                            <option id="checked_momo" value="3">Thanh toán bằng Momo</option>
                                        </select>
                                        <label for="select3">Phương thức thanh toán</label>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-floating">
                                        <input required name="PhoneNumber" type="text" class="form-control txt-phonenumber" id="PhoneNumber" placeholder="Your phone number">
                                        <label for="PhoneNumber">Số điện thoại</label>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="input-group" style="margin:20px 0;">
                                        <label for="soLuongNguoiLon">Số lượng người lớn</label>
                                        <div style="display: flex;align-items: center;margin-top: 10px;">
                                            <button class="btn btn-outline-secondary" type="button" onclick="changeQuantity('soLuongNguoiLon', -1)">-</button>
                                            <input name="SoLuongNguoiLon" type="text" class="form-control" id="soLuongNguoiLon" name="soLuongNguoiLon" value="@soLuongNguoiLon" readonly style="text-align: center;">
                                            <button class="btn btn-outline-secondary" type="button" onclick="changeQuantity('soLuongNguoiLon', 1)">+</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="input-group" style="margin:20px 0;">
                                        <label for="soLuongTreEm">Số lượng trẻ em (3 - 9 tuổi)</label>
                                        <div style="display: flex;align-items: center;margin-top: 10px;">
                                            <button class="btn btn-outline-secondary" type="button" onclick="changeQuantity('soLuongTreEm', -1)">-</button>
                                            <input name="SoLuongTreEm" type="text" class="form-control" id="soLuongTreEm" name="soLuongTreEm" value="@soLuongTreEm" readonly style="text-align: center;">
                                            <button class="btn btn-outline-secondary" type="button" onclick="changeQuantity('soLuongTreEm', 1)">+</button>
                                        </div>
                                    </div>
                                </div>

                                <!-- input chứa id Tour và Tổng tiền -->
                                <input type="hidden" value="@Model.tour.id_tour" name="IdTour" />
                                <input type="hidden" value="0" name="TongTien" id="totalPriceDataInput" />

                                <div class="col-12">
                                    <div class="form-floating">
                                        <textarea name="GhiChu" class="form-control ghichu" placeholder="Special Request" id="message" style="height: 100px"></textarea>
                                        <label for="message">Ghi chú</label>
                                    </div>
                                </div>
                                @* <div class="col-12">
                                        <button class="btn btn-primary w-100 py-3" type="submit">Đặt Ngay</button>
                                    </div>*@
                            </div>
                        </div>
                        <div style="width:50% ; display: flex;justify-content: center;">
                            <div style="width:70%; border:1px solid #b6b6b6;height: 100%;padding: 20px;border-radius: 5px;">
                                <h3>Thanh toán</h3>
                                <div style="margin-top: 35px;">
                                    <h4 style="text-align: left;font-size: 17px;margin-bottom: 20px;">Hành khách</h4>
                                    @*  Hiển thị số lượng và giá của người lớn và trẻ em *@
                                    <div style="display: flex;align-items: center;justify-content: space-between;border-bottom: 1px solid #565353;margin-bottom: 20px;">
                                        <p>Người lớn</p>
                                        <p style="margin-top: 0;"><span class="soluongnguoilon" id="soLuongNguoiLonDisplay">@soLuongNguoiLon</span> x <b class="gianguoilon">@Html.DisplayFor(model => model.tour.GiaNguoiLon)đ</b></p>
                                    </div>
                                    <div style="display: flex;align-items: center;justify-content: space-between;border-bottom: 1px solid #565353;margin-bottom: 20px;">
                                        <p>Trẻ em</p>
                                        <p style="margin-top: 0;"><span class="soluongtreem" id="soLuongTreEmDisplay">@soLuongTreEm</span> x <b class="giatreem">@Html.DisplayFor(model => model.tour.GiaTreEm)đ</b></p>
                                    </div>
                                    <div style="display: flex;align-items: center;justify-content: space-between;margin: 30px 0;">
                                        <p style="font-weight: bold;font-size: 20px;">Tổng tiền</p>
                                        <p style="margin-top: 0;color: red;font-weight: bold;font-size: 20px;" id="totalPrice">0đ</p>
                                    </div>
                                </div>
                                <button onclick="checkOutHandle()" class="btn btn-primary w-100 py-3" type="button" style="border-radius: 10px;background: red;">Đặt Ngay</button>
                            </div>
                        </div>
                    </div>
                </form>
                @* GET ID USER *@
                <input type="hidden" class="id_user" value="@userName" />
            </div>
        </div>
    </div>

    <!-- Booking End -->
    <!-- JavaScript Libraries -->
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="lib/wow/wow.min.js"></script>
    <script src="lib/easing/easing.min.js"></script>
    <script src="lib/waypoints/waypoints.min.js"></script>
    <script src="lib/counterup/counterup.min.js"></script>
    <script src="lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="lib/tempusdominus/js/moment.min.js"></script>
    <script src="lib/tempusdominus/js/moment-timezone.min.js"></script>
    <script src="lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>
    <!--thêm thư viện emailjs-->
    <script src="https://cdn.emailjs.com/dist/email.min.js"></script>
    <script>
        // thanh toan
        function checkOutHandle() {
            if (document.querySelector('.txt-fullname').value == ""
                || document.querySelector('.txt-phonenumber').value == ""
                || document.querySelector('.txt-email').value == "") {
                window.alert("Vui lòng nhập đầy đủ thông tin!")
            } else {
                checkOut();
            }
        }

        (function () {
            emailjs.init('bJw6FDbbGfOHWZbN4'); // Thay YOUR_USER_ID bằng User ID của bạn từ EmailJS
        })();

        function generateID() {
            return Math.floor(Math.random() * 9000) + 1000;
        }

        function checkOut() {
            //var id_user = document.querySelector(".id_user").textContent
            var id_user = document.querySelector(".id_user").value;
            console.log(id_user);
            localStorage.removeItem(id_user);
            var selectElement = document.getElementById("select3");

            var item = {
                id_order: generateID(),
                fullname: document.querySelector('.txt-fullname').value,
                phonenumber: document.querySelector('.txt-phonenumber').value,
                email: document.querySelector('.txt-email').value,
                ghichu: document.querySelector('.ghichu').value,
                idtour: document.querySelector('.idtour').textContent,
                tentour: document.querySelector('.tentour').textContent,
                khoihanh: document.querySelector('.khoihanh').textContent,
                thoigian: document.querySelector('.thoigian').textContent,
                noikhoihanh: document.querySelector('.noikhoihanh').textContent,
                sochoconnhan: document.querySelector('.soluonggtoida').textContent,
                avata: document.querySelector('.avata').src,
                totalPrice: document.getElementById('totalPrice').textContent,
                soluongtreem: document.querySelector('.soluongtreem').textContent,
                soluongnguoilon: document.querySelector('.soluongnguoilon').textContent,
                gianguoilon: document.querySelector('.gianguoilon').textContent,
                giatreem: document.querySelector('.giatreem').textContent,
                phuongthucthanhtoan: selectElement.options[selectElement.selectedIndex].text
            }

            if (localStorage.getItem(id_user) != null) {
                var listitem = JSON.parse(localStorage.getItem(id_user))
                listitem.push(item)
                localStorage.setItem(id_user, JSON.stringify(listitem))
            } else {
                var shopuser = []
                shopuser.push(item)
                localStorage.setItem(id_user, JSON.stringify(shopuser))
            }

            // gửi email
            const dataToSend = {
                id_order: item.id_order,
                to_email: item.email,
                fullname: item.fullname,
                phonenumber: item.phonenumber,
                ghichu: item.ghichu,
                idtour: item.idtour,
                tentour: item.tentour,
                khoihanh: item.khoihanh,
                thoigian: item.thoigian,
                noikhoihanh: item.noikhoihanh,
                avata: item.avata,
                totalPrice: item.totalPrice,
                soluongtreem: item.soluongtreem,
                soluongnguoilon: item.soluongnguoilon,
                gianguoilon: item.gianguoilon,
                giatreem: item.giatreem,
                from_email: 'SJourney Team',
                phuongthucthanhtoan: item.phuongthucthanhtoan,
            };
            emailjs.send('service_4kyeysa', 'template_rp1ch7v', dataToSend).then(function (response) {
                console.log('Email đã được gửi đi!', response.status, response.text);
            }, function (error) {
                console.log('Gửi email thất bại:', error);
            });

            // chuyển hướng thanh toán
            if (selectElement.value == 1) {
                window.alert("Email đã được gửi đi!")
                window.location.href = "/Payment/PayBank";
            } else if (selectElement.value == 2) {
                window.alert("Email đã được gửi đi!")
                window.location.href = "/Payment/PayZalo";
            } else if (selectElement.value == 3) {
                window.alert("Email đã được gửi đi!")
                window.location.href = "/Payment/PayMomo";
            }
        }
        // end thanh toan

        var soLuongToiDa = parseInt('@Model.soLuongCon');

        function changeQuantity(id, change) {
            var soLuongNL = parseInt(document.getElementById('soLuongNguoiLonDisplay').innerText);
            var soLuongTE = parseInt(document.getElementById('soLuongTreEmDisplay').innerText);
            console.log(soLuongNL);
            console.log(soLuongTE);
            var tongSoLuong = soLuongNL + soLuongTE;
            var input = document.getElementById(id);
            var value = parseInt(input.value, 10);
            value = isNaN(value) ? 0 : value;

            if (id === "soLuongNguoiLon" && value <= 1 && change === -1) { // Đối với số lượng người lớn, giá trị tối thiểu là 1
                value = 1;
                alert("Số lượng người đặt tối thiểu là 1");
            } else if (id === "soLuongTreEm" && value <= 0 && change === -1) { // Đối với số lượng trẻ em, giá trị tối thiểu là 0
                value = 0;
            } else {
                value += change;
            }

            if (tongSoLuong >= soLuongToiDa && change === 1) {
                alert("Số lượng đã đầy. Số lượng tối đa là " + soLuongToiDa);
                return;
            }

            input.value = value;

            console.log("TONG " + tongSoLuong);
            console.log("SL TOI DA: " + soLuongToiDa);
            // Kiểm tra nếu số lượng tăng vượt quá số lượng tối đa
            updateDisplayedQuantity(id, value); // Cập nhật số lượng hiển thị
            calculateTotalPrice(); // Tính lại tổng tiền
        }


    function updateDisplayedQuantity(id, value) {
        document.getElementById(id + "Display").textContent = value;
    }

        function calculateTotalPrice() {
        var soLuongNguoiLon = parseInt(document.getElementById('soLuongNguoiLon').value);
        var soLuongTreEm = parseInt(document.getElementById('soLuongTreEm').value);
        var giaNguoiLon = parseInt('@Model.tour.GiaNguoiLon');
        var giaTreEm = parseInt('@Model.tour.GiaTreEm');
        var tongTienNguoiLon = soLuongNguoiLon * giaNguoiLon;
        var tongTienTreEm = soLuongTreEm * giaTreEm;
        var tongTien = tongTienNguoiLon + tongTienTreEm;
            document.getElementById('totalPrice').textContent = formatCurrency(tongTien) + 'đ';
            document.getElementById('totalPriceDataInput').value = tongTien
    }

    function formatCurrency(value) {
        return new Intl.NumberFormat('vi-VN').format(value);
    }
            // Script for increasing/decreasing quantity for adults
            document.getElementById('plusButtonNguoiLon').addEventListener('click', function () {
                incrementValue('soLuongNguoiLon');
            });

            document.getElementById('minusButtonNguoiLon').addEventListener('click', function () {
                decrementValue('soLuongNguoiLon');
            });

            // Script for increasing/decreasing quantity for children
            document.getElementById('plusButtonTreEm').addEventListener('click', function () {
                incrementValue('soLuongTreEm');
            });

            document.getElementById('minusButtonTreEm').addEventListener('click', function () {
                decrementValue('soLuongTreEm');
            });

            // Function to increment the value
            function incrementValue(id) {
                var input = document.getElementById(id);
                var value = parseInt(input.value, 10);
                value = isNaN(value) ? 0 : value;
                value++;
                input.value = value;
            }

            // Function to decrement the value
            function decrementValue(id) {
                var input = document.getElementById(id);
                var value = parseInt(input.value, 10);
                value = isNaN(value) ? 0 : value;
                if (value > 0) {
                    value--;
                    input.value = value;
                }
            }
@**@
    </script>

    <!-- Template Javascript -->
    <script src="js/main.js"></script>
</body>

</html>

